[{"path":"/articles/EpiReport_Vignette.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"The 'Epidemiological Report' Package","text":"EpiReport package allows user draft epidemiological report similar ECDC Annual Epidemiological Report (AER) (see https://www.ecdc.europa.eu/en/publications-data/monitoring/-annual-epidemiological-reports) Microsoft Word format given disease. standalone functions, package specifically designed generate disease-specific output presented reports, using ECDC Atlas export data. Package details : https://epiconcept-paris.github.io/EpiReport/","code":""},{"path":"/articles/EpiReport_Vignette.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"The 'Epidemiological Report' Package","text":"ECDC’s annual epidemiological report available series individual epidemiological disease reports. Reports published ECDC website https://www.ecdc.europa.eu/en/publications-data/monitoring/-annual-epidemiological-reports become available. year given title report (.e. ‘Annual epidemiological report 2016’) refers year data collected. Reports usually available publication one year data collection complete. reports based data collected European Surveillance System (TESSy)1 exported ECDC Atlas. Countries participating disease surveillance submit data electronically. communicable diseases related health issues covered reports European Union European Economic Area disease surveillance2 3 4 5. ECDC’s annual surveillance reports provide wealth epidemiological data support decision-making national level. mainly intended public health professionals policymakers involved disease prevention control programmes.","code":""},{"path":[]},{"path":"/articles/EpiReport_Vignette.html","id":"disease-dataset-specification","dir":"Articles","previous_headings":"1. Datasets to be used in the Epidemiological Report package","what":"1.1. Disease dataset specification","title":"The 'Epidemiological Report' Package","text":"Two types datasets can used: default dataset included EpiReport package includes Salmonellosis data 2012-2016: EpiReport::SALM2016; dataset specified described . Description variable required disease dataset (naming format): HealthTopicCode: Character string, disease code (see also reports parameter table Tab.3); MeasurePopulation: Character string, population characteristics (e.g. cases, Confirmed cases, Serotype AGONA, Serotype BAREILLY etc.). MeasureCode: Character string, code indicators available (e.g. .COUNT, .RATE, CONFIRMED.AGESTANDARDISED.RATE etc.); TimeUnit: Character string, unit time variable TimeCode (e.g. M monthly data, Y yearly data). TimeCode: Character string, time variable including dates formats available .e. yearly data (e.g. 2001) monthly data (e.g. 2001-01); GeoCode: Character string, geographical level coded format (e.g. Austria, Belgium, BG Bulgaria, see also EpiReport::MSCode table, correspondence table Member State labels codes); XLabel: label associated x-axis epidemiological report (see getAgeGender() plotAgeGender() bar graph age variable); YLabel: label associated y-axis epidemiological report (see getAgeGender() plotAgeGender() bar graph grouping variable gender); ZValue: value associated stratification XLabel YLabel age gender bar graph (see getAgeGender() plotAgeGender()); YValue: value associated y-axis epidemiological report (see plotAge bar graph variable age, getTableByMS() number cases, rate age-standardised rate table Member States year); N: Integer, number cases (see getTrend() getSeason() line graph). Tab.1 Example Salmonellosis data 2012-2016","code":""},{"path":"/articles/EpiReport_Vignette.html","id":"report-parameters-dataset-specification","dir":"Articles","previous_headings":"1. Datasets to be used in the Epidemiological Report package","what":"1.2. Report parameters dataset specification","title":"The 'Epidemiological Report' Package","text":"internal dataset EpiReport::AERparams describes parameters used output disease report. user wishes set different parameters one 53 covered health topics, user wishes analyse additional disease covered default parameter table, possible use external dataset long specified described help page ?EpiReport::AERparams. functions EpiReport package can fed specific parameter table. List main parameters included: HealthTopic: Character string, disease code match health topic code disease-specific dataset (see Tab.1) MeasurePopulation: Character string, population present report: either cases CONFIRMED cases . : table included COUNT: Table presenting number cases Member State year RATE: Table presenting rates cases Member State year ASR: Table presenting age-standardised rates cases Member State year : graph included AG-COUNT: Bar graph presenting number cases age gender AG-RATE: Bar graph presenting rates cases age gender AG-PROP: Bar graph presenting proportion cases age gender -RATE: Bar graph presenting rates cases age TSTrendGraphUse: Yes/, specifying whether include line graph describing trend disease time. TSSeasonalityGraphUse: Yes/, specifying whether include line graph describing seasonality disease. MapNumbersUse: Yes/, specifying whether include map presenting number cases Member State. MapRatesUse: Yes/, specifying whether include map presenting rates cases Member State. MapASRUse: Yes/, specifying whether include map presenting age-standardised rates cases Member State. Tab.2 Example main columns parameter dataset","code":""},{"path":"/articles/EpiReport_Vignette.html","id":"member-states-correspondence-table-dataset","dir":"Articles","previous_headings":"1. Datasets to be used in the Epidemiological Report package","what":"1.3. Member States correspondence table dataset","title":"The 'Epidemiological Report' Package","text":"internal dataset EpiReport::MSCode provides correspondence table geographical code GeoCode used disease dataset, geographical label Country use throughout report. Additional information EU/EEA affiliation also available column EUEEA. Tab.3 Example geographical codes associated labels","code":""},{"path":"/articles/EpiReport_Vignette.html","id":"how-to-generate-the-epidemiological-report-in-microsoft-word-format","dir":"Articles","previous_headings":"","what":"2. How to generate the Epidemiological Report in Microsoft Word format","title":"The 'Epidemiological Report' Package","text":"generate similar report Annual Epidemiological Report, can use default dataset included EpiReport package presenting Salmonellosis data 2012-2016. Calling function getAER(), Salmonellosis 2016 report generated stored working directory (see getwd()) default. Please specify full path output folder necessary:","code":"getAER() output <- \"C:/EpiReport/doc/\" getAER(outputPath = output)"},{"path":"/articles/EpiReport_Vignette.html","id":"external-disease-dataset","dir":"Articles","previous_headings":"2. How to generate the Epidemiological Report in Microsoft Word format","what":"2.1. External disease dataset","title":"The 'Epidemiological Report' Package","text":"generate report using external dataset, please use syntax . following example, Pertussis 2016 TESSy data (csv format, /data folder) used produce corresponding report. Pertussis PNG maps previously created stored specific folder /maps. Please note font Tahoma used plot axis legend. advised import font using extrafont package command font_import loadfonts. However, users prefer use default Arial plots, optional. case, warnings appear console plot.","code":"# --- Importing the dataset PERT2016 <- read.table(\"data/PERT2016.csv\",                         sep = \",\",                         header = TRUE,                         stringsAsFactors = FALSE)  # --- Specifying the folder containing pertussis maps pathMap <- paste(getwd(), \"/maps\", sep = \"\")   # --- (optional) Setting the local language in English for month label Sys.setlocale(\"LC_TIME\", \"C\") #> [1] \"C\"  # --- Producing the report EpiReport::getAER(disease = \"PERT\",         year = 2016,         x = PERT2016,         pathPNG = pathMap)"},{"path":"/articles/EpiReport_Vignette.html","id":"word-template","dir":"Articles","previous_headings":"2. How to generate the Epidemiological Report in Microsoft Word format","what":"2.2. Word template","title":"The 'Epidemiological Report' Package","text":"default, empty ECDC template (Microsoft Word) used produce report. order modify template, please first download default template using function getTemplate(). can store Microsoft Word template specific folder /template. , apply modifications required, save use new Microsoft Word template producing epidemiological report described . Please make sure Microsoft Word bookmarks preserved throughout modifications template. bookmarks specify location include output.","code":"getTemplate(output_path = \"C:/EpiReport/template\") getAER(template = \"C:/EpiReport/template/New_AER_Template.docx\",        outputPath = \"C:/EpiReport/doc/\")"},{"path":"/articles/EpiReport_Vignette.html","id":"word-bookmarks","dir":"Articles","previous_headings":"2. How to generate the Epidemiological Report in Microsoft Word format","what":"2.3. Word bookmarks","title":"The 'Epidemiological Report' Package","text":"epidemiological output included Word template corresponding report chapter. EpiReport package relies Microsoft Word bookmarks specify exact location include output. list bookmarks recognised EpiReport package : YEAR DISEASE DATEPUBLICATLAS TABLE1_CAPTION TABLE1 MAP_NB_CAPTION MAP_NB MAP_RATE_CAPTION MAP_RATE MAP_ASR_CAPTION MAP_ASR TS_TREND_CAPTION TS_TREND TS_TREND_COUNTRIES TS_SEASON_CAPTION TS_SEASON TS_SEASON_COUNTRIES BARGPH_AGEGENDER_CAPTION BARGPH_AGEGENDER BARGPH_AGE_CAPTION BARGPH_AGE","code":""},{"path":"/articles/EpiReport_Vignette.html","id":"how-to-generate-each-epidemiological-outputs-independently","dir":"Articles","previous_headings":"","what":"3. How to generate each epidemiological outputs independently","title":"The 'Epidemiological Report' Package","text":"EpiReport package allows user generate epidemiological output independently Microsoft Word report. ECDC annual epidemiological Report includes five types outputs: number cases ; number cases corresponding rate per 100 000 population number cases, rate age-standardised rate per 100 000 population. Seasonality plot: Distribution cases EU/EEA level, month, past five years. Trend plot: Trend number cases EU/EEA level, month, past five years. number cases; rates per 100 000 population; age-standardised rates per 100 000 population. number cases rate proportion cases age using rate.","code":""},{"path":"/articles/EpiReport_Vignette.html","id":"table-distribution-of-cases-by-member-state","dir":"Articles","previous_headings":"3. How to generate each epidemiological outputs independently","what":"3.1. Table: distribution of cases by Member State","title":"The 'Epidemiological Report' Package","text":"function getTableByMS() generates flextable object (see package flextable) presenting number cases Member State last five years. default, function use internal Salmonellosis 2012-2016 data present number confirmed cases corresponding rate year, focus 2016 age-standardised rates. Country 2015 2016 2017 2018 2019 Number Rate Number Rate Number Rate Number Rate Number Rate ASR Austria 103 1.2 116 1.3 85 1.0 85 1.0 142 1.6 1.7 Belgium 108 1.0 114 1.0 77 0.7 101 0.9 202 1.8 1.9 Bulgaria . . . . . . . . . . . Croatia - - 2 0.0 0 0.0 2 0.0 4 0.1 0.1 Cyprus . . . . . . . . . . . Czechia 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0.0 Denmark . . . . . . . . . . . Estonia 12 0.9 9 0.7 8 0.6 6 0.5 6 0.5 0.5 Finland 54 1.0 66 1.2 25 0.5 56 1.0 81 1.5 1.6 France 285 0.4 373 0.6 266 0.4 331 0.5 904 1.3 1.4 Germany 722 0.9 958 1.2 635 0.8 614 0.7 1175 1.4 1.5 Greece 2 0.0 2 0.0 1 0.0 2 0.0 10 0.1 0.1 Hungary 12 0.1 24 0.2 17 0.2 14 0.1 44 0.5 0.5 Iceland 0 0.0 0 0.0 1 0.3 1 0.3 4 1.1 1.1 Ireland 8 0.2 18 0.4 10 0.2 17 0.4 18 0.4 0.4 Italy 103 0.2 106 0.2 95 0.2 108 0.2 231 0.4 0.4 Latvia 4 0.2 9 0.5 13 0.7 12 0.6 11 0.6 0.6 Liechtenstein . . . . . . . . . . . Lithuania 9 0.3 4 0.1 4 0.1 8 0.3 9 0.3 0.4 Luxembourg 0 0.0 1 0.2 0 0.0 1 0.2 1 0.2 0.2 Malta 1 0.2 1 0.2 3 0.7 1 0.2 2 0.4 0.4 Netherlands 18 - 6 - 0 - 0 - 0 - - Norway 98 1.9 64 1.2 35 0.7 49 0.9 102 1.9 2.0 Poland 12 0.0 41 0.1 29 0.1 30 0.1 55 0.1 0.1 Portugal 14 0.1 13 0.1 11 0.1 14 0.1 30 0.3 0.3 Romania 7 0.0 8 0.0 7 0.0 4 0.0 15 0.1 0.1 Slovakia 2 0.0 4 0.1 2 0.0 7 0.1 6 0.1 0.1 Slovenia 3 0.1 6 0.3 5 0.2 8 0.4 21 1.0 1.1 Spain 168 0.4 261 0.6 128 0.3 205 0.4 228 0.5 0.5 Sweden 159 1.6 225 2.3 106 1.1 106 1.0 235 2.3 2.4 United Kingdom 423 0.7 468 0.7 465 0.7 432 0.7 827 1.2 1.3 EU-EEA 2327 0.5 2899 0.6 2028 0.4 2214 0.5 4363 0.9 0.9 table can drafted using external data, specifying disease code year use reference report. example , use Zika virus data. According report parameters, table disease present number reported cases last five years Member State. Country 2012 2013 2014 2015 2016 Number Number Number Austria - - - 1 41 Belgium - - - 1 120 Bulgaria . . . . . Croatia . . . . . Cyprus . . . . . Czechia - - - - 13 Denmark - - - - 8 Estonia - - - - 0 Finland - - - 1 6 France - - - - 1141 Germany . . . . . Greece - - - - 4 Hungary - - - - 2 Iceland . . . . . Ireland - - - 1 15 Italy - - - - 101 Latvia 0 0 0 0 0 Liechtenstein . . . . . Lithuania . . . . . Luxembourg - - - - 2 Malta - - - - 2 Netherlands - - - 11 98 Norway - - - - 8 Poland . . . . . Portugal - - - - 18 Romania - - - - 3 Slovakia - - - - 3 Slovenia - - - - 7 Spain - - - 10 301 Sweden - - - 1 34 United Kingdom - - - 3 194 EU-EEA 0 0 0 29 2121","code":"EpiReport::getTableByMS() ZIKV2016 <- read.table(\"data/ZIKV2016.csv\",                         sep = \",\",                         header = TRUE,                         stringsAsFactors = FALSE) EpiReport::getTableByMS(x = ZIKV2016,               disease = \"ZIKV\",               year = 2016)"},{"path":"/articles/EpiReport_Vignette.html","id":"seasonality-plot-distribution-of-cases-by-month","dir":"Articles","previous_headings":"3. How to generate each epidemiological outputs independently","what":"3.2. Seasonality plot: distribution of cases by month","title":"The 'Epidemiological Report' Package","text":"function getSeason() generates ggplot (see package ggplot2) presenting distribution cases EU/EEA level, month, past five years. plot includes: number cases month reference year (green solid line) mean number cases month four previous years (grey dashed line) minimum number cases month four previous years (grey area) maximum number cases month four previous years (grey area) default, function use internal Salmonellosis 2012-2016 data.  Figure. Distribution confirmed salmonellosis cases month, EU/EEA, 2016 2012-2015 plot can also drafted using external data, specifying disease dataset, disease code year use reference report. example , use Pertussis 2012-2016 data.  Figure. Distribution pertussis cases month, EU/EEA, 2016 2012-2015","code":"# --- Salmonellosis 2016 plot EpiReport::getSeason() # --- Pertussis 2016 plot EpiReport::getSeason(x = PERT2016,                      disease = \"PERT\",                      year = 2016)"},{"path":"/articles/EpiReport_Vignette.html","id":"trend-plot-trend-and-number-of-cases-by-month","dir":"Articles","previous_headings":"3. How to generate each epidemiological outputs independently","what":"3.3. Trend plot: trend and number of cases by month","title":"The 'Epidemiological Report' Package","text":"function getTrend() generates ggplot (see package ggplot2) presenting trend number cases EU/EEA level, month, past five years. plot includes: number cases month 5-year period (grey solid line) 12-month moving average number cases month (green solid line) default, function use internal Salmonellosis 2012-2016 data.  Figure. Trend number confirmed salmonellosis cases, EU/EEA month, 2012-2016 plot can also drafted using external data, specifying disease dataset, disease code year use reference report. example , use Pertussis 2012-2016 data.  Figure. Trend number pertussis cases, EU/EEA month, 2012-2016","code":"# --- Salmonellosis 2016 plot EpiReport::getTrend() # --- Pertussis 2016 plot EpiReport::getTrend(x = PERT2016,                     disease = \"PERT\",                     year = 2016)"},{"path":"/articles/EpiReport_Vignette.html","id":"maps-distribution-of-cases-by-member-state","dir":"Articles","previous_headings":"3. How to generate each epidemiological outputs independently","what":"3.4. Maps: distribution of cases by Member State","title":"The 'Epidemiological Report' Package","text":"function getMap() provides preview PNG map associated disease. default, function use internal Salmonellosis 2016 PNG maps. According report parameters, corresponding map present notification rate confirmed salmonellosis cases.  Figure. Distribution confirmed salmonellosis cases per 100 000 population country, EU/EEA, 2016 map can also included using external PNG files, specifying disease code year use reference report. corresponding syntax described (pertussis map available).","code":"# --- Salmonellosis 2016 map EpiReport::getMap() # --- Pertussis 2016 map EpiReport::getMap(disease = \"PERT\",                    year = 2016,                    pathPNG = \"C:/EpiReport/maps/\")"},{"path":"/articles/EpiReport_Vignette.html","id":"age-and-gender-bar-graph","dir":"Articles","previous_headings":"3. How to generate each epidemiological outputs independently","what":"3.5. Age and gender bar graph","title":"The 'Epidemiological Report' Package","text":"function getAgeGender() generates ggplot (see package ggplot2) presenting bar graph distribution cases EU/EEA level age gender. bar graph uses either: number cases, rate per 100 000 cases, proportion cases. default, function use internal Salmonellosis 2012-2016 data rate confirmed cases per 100 000 population.  Figure. Distribution confirmed salmonellosis cases per 100 000 population, age gender, EU/EEA, 2016 bar graph can also drafted using external data, specifying disease dataset, disease code year use reference report. example , use Zika 2012-2016 data.  Figure. Distribution Zika virus infection proportion (%), age gender, EU/EEA, 2016","code":"# --- Salmonellosis 2016 bar graph EpiReport::getAgeGender() # --- Zika 2016 bar graph EpiReport::getAgeGender(x = ZIKV2016,                          disease = \"ZIKV\",                          year = 2016)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lore Merdrignac. Author, contractor, maintainer.           Author package original code Tommi Karki. Author, funder. Esther Kissling. Author, contractor. Joana Gomes Dias. Author, funder.           Project manager","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Merdrignac L, Karki T, Kissling E, Gomes Dias J (2025). EpiReport: Epidemiological Report. R package version 1.0.4, https://www.ecdc.europa.eu/en/publications-data/monitoring/-annual-epidemiological-reports.","code":"@Manual{,   title = {EpiReport: Epidemiological Report},   author = {Lore Merdrignac and Tommi Karki and Esther Kissling and Joana {Gomes Dias}},   year = {2025},   note = {R package version 1.0.4},   url = {https://www.ecdc.europa.eu/en/publications-data/monitoring/all-annual-epidemiological-reports}, }"},{"path":"/index.html","id":"epireport-v-104-package","dir":"","previous_headings":"","what":"Epidemiological Report","title":"Epidemiological Report","text":"European Centre Disease Prevention Control (ECDC)","code":""},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Epidemiological Report","text":"EpiReport package allows user draft epidemiological report similar ECDC Annual Epidemiological Reports (see https://ecdc.europa.eu/en/annual-epidemiological-reports) Microsoft Word format given disease getAER(). standalone functions, package specifically designed generate disease-specific output presented reports. package includes: Table distribution cases Member State last five years getTableByMS() Seasonal plot distribution cases EU/EEA level, month, past five years getSeason() Trend plot trend number cases EU/EEA level, month, past five years getTrend() Age gender bar graph distribution cases EU/EEA level getAgeGender() Two types datasets can used: default dataset included EpiReport package includes Denger data 2015-2019: EpiReport::DENGUE2019; dataset specified described package vignette.","code":""},{"path":"/reference/AERparams.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset describing the parameters for the epidemiological report production — AERparams","title":"Dataset describing the parameters for the epidemiological report production — AERparams","text":"dataset describing parameters used output disease report 53 health topics included TESSy","code":""},{"path":"/reference/AERparams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset describing the parameters for the epidemiological report production — AERparams","text":"","code":"AERparams"},{"path":"/reference/AERparams.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset describing the parameters for the epidemiological report production — AERparams","text":"data frame 53 rows (corresponding 53 health topics) 24 variables: HealthTopic Disease code match health topic code      disease-specific dataset  e.g. ANTH, SALM, etc. DG (optional) Disease group e.g. FWD DP (optional) Disease programme e.g. FWD Label Disease label used report e.g. salmonellosis, anthrax FrequencyCategory (optional) Frequency disease e.g. RARE, NON-RARE, etc. MeasurePopulation Type population presented disease .e. CONFIRMED cases DatePublicAtlas Date latest availability public access Atlas TableUse Type table present report .e. table,      ASR table presenting age-standardised rates, RATE table presenting rates      COUNT table presenting number cases . TableRatesLabel Label use table rates e.g. RATE PER 100000 POPULATION TableRatesNoDecimals Number decimals use presenting rates TableASRNoDecimals Number descimals use presenting ASR AgeGenderUse Type age gender bar graph present .e. graph,      AG-COUNT Bar graph presenting number cases age gender,      AG-RATE Bar graph presenting rates cases age gender,      AG-PROP Bar graph presenting proportion cases age gender,      -RATE Bar graph presenting rates cases age. AgeGenderBarGraphLabel Label use age gender bar graph AgeGenderGraphNoDecimals Number decimals use presenting rates      age gender bar graph TSTrendGraphUse Logical Y/N specifying whether include line graph      describing trend disease time TSSeasonalityGraphUse Logical Y/N specifying whether include      line graph describing seasonality disease TSSpecific Logical Y/N specific line graph inclusion MapNumbersUse Logical Y/N specifying whether include map      presenting number cases Member State MapRatesUse Logical Y/N specifying whether include map      presenting rates cases Member State MapRatesNoDecimals (optional) Number decimals use presenting maps MapASRUse Logical Y/N specifying whether include map      presenting age-standardised rates cases Member State MapASRNoDecimals (optional) Number decimals use presenting maps Transmission implemented yet TransmissionNoDecimals implemented yet","code":""},{"path":"/reference/DENGUE2019.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset including Dengue data for 2015-2019 — DENGUE2019","title":"Dataset including Dengue data for 2015-2019 — DENGUE2019","text":"dataset containing data indicators required build epidemiological report Dengue 2019 TESSy data (default dataset used throughout EpiReport)","code":""},{"path":"/reference/DENGUE2019.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset including Dengue data for 2015-2019 — DENGUE2019","text":"","code":"DENGUE2019"},{"path":"/reference/DENGUE2019.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset including Dengue data for 2015-2019 — DENGUE2019","text":"data frame 44,332 rows 11 variables: HealthTopicCode Disease code e.g. ANTH, SALM, etc. MeasureCode Code measure indicator TimeUnit Unit time variable .e. Y yearly data M monthly data TimeCode Time variable including dates formats available   (according unit defined TimeUnit) yearly data (e.g. 2001) monthly data (e.g. 2001-01) GeoCode Geographical level coded format including country names   (e.g. Austria, Belgium, BG Bulgaria,   see also EpiReport::MSCode table, correspondence table Member State labels codes) XValue XValue XLabel label associated x-axis epidemiological report   (see getAgeGender() plotAgeGender() bar graph age variable) YValue value associated y-axis epidemiological report   (see plotAge() bar graph variable age, getTableByMS()   number cases, rate age-standardised rate table Member States year) YLabel label associated y-axis epidemiological report   (see getAgeGender() plotAgeGender() bar graph grouping variable gender) ZValue value associated stratification XLabel YLabel   age gender bar graph (see getAgeGender() plotAgeGender()) N Number cases (see getTrend() getSeason() line graph)","code":""},{"path":[]},{"path":"/reference/EcdcColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour palettes following the March 2018 ECDC guidelines for presentation of surveillance data — EcdcColors","title":"Colour palettes following the March 2018 ECDC guidelines for presentation of surveillance data — EcdcColors","text":"Full document: European Centre Disease Prevention Control. Guidelines presentation surveillance data. Stockholm: ECDC; 2018. Available : Guidelines presentation surveillance data","code":""},{"path":"/reference/EcdcColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colour palettes following the March 2018 ECDC guidelines for presentation of surveillance data — EcdcColors","text":"","code":"EcdcColors(col_scale = \"green\", n = NULL, grey_shade = NULL, hot_cols = NULL)"},{"path":"/reference/EcdcColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colour palettes following the March 2018 ECDC guidelines for presentation of surveillance data — EcdcColors","text":"col_scale Selected colour scale, defaults 'green'. Select 'green', 'blue', 'red', 'grey', 'qual(itative)' 'hot(cold)' n Number colours colour scale, apart grey, order indicated guidelines. Defaults one colour, apart two colours hotcold scale, max 7-8 colours scale. select grey shades, use argument grey_shade; select number hot (warm) colours hotcold scale, use argument hot_cols. grey_shade (Optional: use 'grey') Selected shade(s) grey selected order; c('light', 'mediumlight','medium','mediumdark','dark'). Overrides given number colours (n). Defaults 'medium'. hot_cols (Optional: use 'hotcold') Selected number hot (warm) colours hotcold colour scale. Must smaller total number colours (n). Defaults floored half total hotcold colours.","code":""},{"path":"/reference/EcdcColors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Colour palettes following the March 2018 ECDC guidelines for presentation of surveillance data — EcdcColors","text":"Tommi Karki","code":""},{"path":"/reference/EcdcColors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colour palettes following the March 2018 ECDC guidelines for presentation of surveillance data — EcdcColors","text":"","code":"# Select three first green colours EcdcColors(\"green\", n=3) #> [1] \"#C9D971\" \"#65B32E\" \"#1A6E31\"  # Select two first qualitative colours EcdcColors(\"qual\", n=2) #> [1] \"#65B32E\" \"#7CBDC4\"  # Select seven red colours EcdcColors(\"red\", n=7) #> [1] \"#7C170F\" \"#A82D17\" \"#C34A17\" \"#CC6B21\" \"#DC9635\" \"#E9B855\" \"#F1D676\"  EcdcColors(\"grey\", grey_shade = c(\"mediumlight\", \"dark\")) #> [1] \"#C7C7C7\" \"#3F3F3F\"  # Use in a graph # Dummy data mydat <- data.frame(ID = c(seq(1,10,1)),                     Gender = c(rep(c(\"F\", \"M\"),5))) barplot(table(mydat$Gender),         col = EcdcColors(col_scale = \"qual\", n=2))   # Hot-cold colour scale barplot(c(1:4),         col = EcdcColors(col_scale = \"hotcold\", n = 4, hot_cols = 2))"},{"path":"/reference/MSCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset correspondence table between country names and country code — MSCode","title":"Dataset correspondence table between country names and country code — MSCode","text":"Dataframe providing correspondence table geographical code GeoCode used disease dataset, geographical label Country use throughout report. Additional information EU/EEA affiliation also available column EUEEA.","code":""},{"path":"/reference/MSCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset correspondence table between country names and country code — MSCode","text":"","code":"MSCode"},{"path":"/reference/MSCode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset correspondence table between country names and country code — MSCode","text":"data frame 32 rows 3 variables: Country Full name country / Member State e.g. Austria, Belgium, etc. TheCountry Full name country / Member State   including '' article NL UK  e.g. Austria, Belgium, Netherlands, United Kingdom etc. GeoCode Associated code (see GeoCode variable      SALM2016 internal dataset) e.g. , , BG, etc. EUEEA Member State, variable specifying country      part EU EEA.","code":""},{"path":[]},{"path":"/reference/SALM2016.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset including Salmonellosis data for 2012-2016 — SALM2016","title":"Dataset including Salmonellosis data for 2012-2016 — SALM2016","text":"dataset containing data indicators required build epidemiological report Salmonellosis 2016 TESSy data (default dataset used throughout EpiReport)","code":""},{"path":"/reference/SALM2016.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset including Salmonellosis data for 2012-2016 — SALM2016","text":"","code":"SALM2016"},{"path":"/reference/SALM2016.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset including Salmonellosis data for 2012-2016 — SALM2016","text":"data frame 60,775 rows 18 variables: HealthTopicCode Disease code e.g. ANTH, SALM, etc. MeasureLabel optional) Label measure indicator MeasurePopulation Population targeted measure indicator MeasureCode Code measure indicator MeasureId (optional) Measure indicator ID MeasureType (optional) Type measure indicator TimeUnit Unit time variable .e. Y yearly data M monthly data GeoLevel (optional) Geographical level e.g. 1, 2, etc TimeCode Time variable including dates formats available   (according unit defined TimeUnit) yearly data (e.g. 2001) monthly data (e.g. 2001-01) GeoCode Geographical level coded format including country names   (e.g. Austria, Belgium, BG Bulgaria,   see also EpiReport::MSCode table, correspondence table Member State labels codes) XValue (optional) XValue XLabel label associated x-axis epidemiological report   (see getAgeGender() plotAgeGender() bar graph age variable) YValue value associated y-axis epidemiological report   (see plotAge() bar graph variable age, getTableByMS()   number cases, rate age-standardised rate table Member States year) YLabel label associated y-axis epidemiological report   (see getAgeGender() plotAgeGender() bar graph grouping variable gender) ZValue value associated stratification XLabel YLabel   age gender bar graph (see getAgeGender() plotAgeGender()) N Number cases (see getTrend() getSeason() line graph) NMissing (optional) NLowerResolution (optional)","code":""},{"path":[]},{"path":"/reference/body_replace_gg_at_bkm.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace a plot at a bookmark location — body_replace_gg_at_bkm","title":"Replace a plot at a bookmark location — body_replace_gg_at_bkm","text":"Replace plot bookmark location saving PNG file temporary folder.  bookmark considered valid enclosing words within paragraph; .e., bookmark along two paragraphs invalid, bookmark set whole paragraph also invalid, bookmarking words inside paragraph valid.","code":""},{"path":"/reference/body_replace_gg_at_bkm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace a plot at a bookmark location — body_replace_gg_at_bkm","text":"","code":"body_replace_gg_at_bkm(doc, gg, bookmark, width = 6, height = 3)"},{"path":"/reference/body_replace_gg_at_bkm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace a plot at a bookmark location — body_replace_gg_at_bkm","text":"doc docx device gg ggplot object object can printed grDevices::png() bookmark bookmark id width width device inches height height device.","code":""},{"path":"/reference/body_replace_gg_at_bkm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace a plot at a bookmark location — body_replace_gg_at_bkm","text":"doc","code":""},{"path":"/reference/body_replace_gg_at_bkm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace a plot at a bookmark location — body_replace_gg_at_bkm","text":"","code":"doc <- officer::read_docx(path = file.path(system.file(package = \"EpiReport\"),                                            \"template/AER_template.docx\" )) p <- EpiReport::getTrend() doc <- EpiReport::body_replace_gg_at_bkm(doc = doc,                                          gg = p,                                          bookmark = \"TS_TREND\",                                          width = 6,                                          height = 3)"},{"path":"/reference/cleanECDCTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleaning the final table — cleanECDCTable","title":"Cleaning the final table — cleanECDCTable","text":"Cleaning final table: identifying missing reports '-', replacing Member State codes Member State names (see correspondence table MSCode), identifying reporting Member States '.'","code":""},{"path":"/reference/cleanECDCTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleaning the final table — cleanECDCTable","text":"","code":"cleanECDCTable(   x,   Country = EpiReport::MSCode$Country,   GeoCode = EpiReport::MSCode$GeoCode )"},{"path":"/reference/cleanECDCTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleaning the final table — cleanECDCTable","text":"x dataframe, dataset clean Country character vector, full names countries / Member States (e.g. Austria, Belgium, etc.) replace GeoCodes included x dataframe (Default MSCode$Country) GeoCode character vector, corresponding GeoCode Member State (e.g. , , etc.) replace country full names (Default MSCode$GeoCode)","code":""},{"path":"/reference/cleanECDCTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleaning the final table — cleanECDCTable","text":"cleaned ECDC dataframe","code":""},{"path":[]},{"path":"/reference/cleanMeasureCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean the MeasureCode variable — cleanMeasureCode","title":"Clean the MeasureCode variable — cleanMeasureCode","text":"Clean MeasureCode variable replace specific codes generic ones  (e.g. ACCUTE.AGE_GENDER.RATE replaced CONFIRMED.AGE_GENDER.RATE)","code":""},{"path":"/reference/cleanMeasureCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean the MeasureCode variable — cleanMeasureCode","text":"","code":"cleanMeasureCode(var)"},{"path":"/reference/cleanMeasureCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean the MeasureCode variable — cleanMeasureCode","text":"var character string vector variable, variable clean","code":""},{"path":"/reference/cleanMeasureCode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean the MeasureCode variable — cleanMeasureCode","text":"cleaned vector variable","code":""},{"path":"/reference/cleanMeasureCode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean the MeasureCode variable — cleanMeasureCode","text":".COUNT replace following codes: .DOMESTIC.COUNT AGELT1.COUNT .RATE replace following codes: .DOMESTIC.AGE.RATE .AGE.RATE replace following codes: .DOMESTIC.AGE.RATE .AGESTANDARDISED.RATE replace following codes: .DOMESTIC.AGESTANDARDISED.RATE CONFIRMED.COUNT replace following codes: .LABCONFIRMED.COUNT CONFIRMED.LABCONFIRMED.COUNT CONFIRMED.AGELT1.COUNT TYPHOID.COUNT CONFIRMED.RATE replace following codes: CONFIRMED.LABCONFIRMED.RATE CONFIRMED.AGELT1.RATE TYPHOID.RATE CONFIRMED.AGESTANDARDISED.RATE replace following codes: CONFIRMED.LABCONFIRMED.AGESTANDARDISED.RATE CONFIRMED.AGE_GENDER.RATE replace following codes: CONFIRMED.LABCONFIRMED.AGE_GENDER.RATE TYPHOID.AGE_GENDER.RATE ACCUTE.AGE_GENDER.RATE","code":""},{"path":[]},{"path":"/reference/cleanMeasureCode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean the MeasureCode variable — cleanMeasureCode","text":"","code":"x <- EpiReport::SALM2016 x$MeasureCode <- cleanMeasureCode(x$MeasureCode)"},{"path":"/reference/filterDisease.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter disease parameters — filterDisease","title":"Filter disease parameters — filterDisease","text":"Filter table parameters report given disease","code":""},{"path":"/reference/filterDisease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter disease parameters — filterDisease","text":"","code":"filterDisease(dis, reportParameters)"},{"path":"/reference/filterDisease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter disease parameters — filterDisease","text":"dis character string, disease code reportParameters dataset parameters report (default AERparams)","code":""},{"path":"/reference/filterDisease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter disease parameters — filterDisease","text":"dataframe one row (AERparams dataframe) corresponding parameters selected disease","code":""},{"path":[]},{"path":"/reference/filterDisease.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter disease parameters — filterDisease","text":"","code":"disease <- \"SALM\" reportParameters <- EpiReport::AERparams reportParameters <- filterDisease(disease, reportParameters)"},{"path":"/reference/getAER.html","id":null,"dir":"Reference","previous_headings":"","what":"Get full disease-specific epidemiological report — getAER","title":"Get full disease-specific epidemiological report — getAER","text":"Function generate 'Microsoft Word' epidemiological report (similar ECDC Annual Epidemiological Report (AER)) including disease-specific outputs output-specific bookmarks exact location.  (information outputs corresponding bookmarks, please see package vignette \"Epidemiological Report Package\" browseVignettes(\"EpiReport\")) (see ECDC AER https://www.ecdc.europa.eu/en/publications-data/monitoring/-annual-epidemiological-reports)","code":""},{"path":"/reference/getAER.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get full disease-specific epidemiological report — getAER","text":"","code":"getAER(   template = file.path(system.file(package = \"EpiReport\"), \"template/AER_template.docx\"),   outputPath = getwd(),   x = EpiReport::DENGUE2019,   disease = \"DENGUE\",   year = 2019,   reportParameters = EpiReport::AERparams,   MSCode = EpiReport::MSCode,   pathPNG = system.file(\"maps\", package = \"EpiReport\") )"},{"path":"/reference/getAER.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get full disease-specific epidemiological report — getAER","text":"template doc (see 'officer' package), empty 'Word' document template include table plots disease-specific outputs. Default value empty template included package. See getTemplate(). outputPath character string, full path generate epidemiological report 'Word' output. Default value current working directory getwd(). x dataframe, raw disease-specific dataset (see specification dataset package vignette browseVignettes(\"EpiReport\")) (default DENGUE2019) disease character string, disease code (default \"DENGUE\"). Please make sure disease code included disease-specific dataset x HealthTopicCode variable. year numeric, year produce report (default 2019). Please make sure year included disease-specific dataset x TimeCode variable. reportParameters dataframe, dataset including required parameters report production (default AERparams) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) MSCode dataframe, correspondence table GeoCode names codes (default MSCode) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) pathPNG character string, full path folder containing maps (PNG) include final report","code":""},{"path":"/reference/getAER.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get full disease-specific epidemiological report — getAER","text":"'Word' document","code":""},{"path":[]},{"path":"/reference/getAER.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get full disease-specific epidemiological report — getAER","text":"","code":"if (FALSE) { # \\dontrun{ # --- Generating the AER report using the default Dengue dataset getAER() } # }  if (FALSE) { # \\dontrun{ # --- Or using external data (example below) ZIKV2016 <- read.table(\"data/ZIKV2016.csv\", sep = \",\", header = TRUE, stringsAsFactors = FALSE) output <- \"C:/EpiReport/doc/\" pathMap <- \"C:/EpiReport/maps/\" getAER(disease = \"ZIKV\", year = 2016, x = ZIKV2016, outputPath = output, pathPNG = pathMap) } # }"},{"path":"/reference/getAgeGender.html","id":null,"dir":"Reference","previous_headings":"","what":"Get disease-specific age and gender bar graph — getAgeGender","title":"Get disease-specific age and gender bar graph — getAgeGender","text":"Function returning age gender bar graph included epidemiological report bookmark location 'BARGPH_AGEGENDER' template report.  bar graph presents distribution cases EU/EEA level using either: AG-COUNT: number cases age gender AG-RATE: rate per 100 000 cases age gender AG-PROP: proportion cases age gender -RATE: rate per 100 000 cases age choice type bar graph set report parameters table AERparams.  (see ECDC reports https://www.ecdc.europa.eu/en/publications-data/monitoring/-annual-epidemiological-reports)","code":""},{"path":"/reference/getAgeGender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get disease-specific age and gender bar graph — getAgeGender","text":"","code":"getAgeGender(   x = EpiReport::DENGUE2019,   disease = \"DENGUE\",   year = 2019,   reportParameters = EpiReport::AERparams,   geoCode = \"EU_EEA31\",   index = 1,   doc )"},{"path":"/reference/getAgeGender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get disease-specific age and gender bar graph — getAgeGender","text":"x dataframe, raw disease-specific dataset (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) (default DENGUE2019) disease character string, disease code (default \"DENGUE\"). Please make sure disease code included disease-specific dataset x HealthTopicCode variable. year numeric, year produce graph (default 2019). Please make sure year included disease-specific dataset x TimeCode variable. reportParameters dataframe, dataset including required parameters graph report production (default AERparams) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) geoCode character string, GeoCode run analysis (default \"EU_EEA31\") index integer, figure number doc 'Word' document (see 'officer' package) add graph bookmark location. doc missing, getAgeGender returns ggplot2 object.","code":""},{"path":"/reference/getAgeGender.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get disease-specific age and gender bar graph — getAgeGender","text":"'Word' doc ggplot2 object","code":""},{"path":[]},{"path":"/reference/getAgeGender.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get disease-specific age and gender bar graph — getAgeGender","text":"","code":"# --- Plot using the default dataset getAgeGender()   # --- Plot using external dataset # --- Please see examples in the vignette browseVignettes(package = \"EpiReport\") #> No vignettes found by browseVignettes(package = \"EpiReport\")"},{"path":"/reference/getMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Get disease-specific map: distribution of cases by Member State — getMap","title":"Get disease-specific map: distribution of cases by Member State — getMap","text":"Function returning disease-specific PNG map previously created stored specific folder (see pathPNG argument) included epidemiological report bookmark location template report, depending type map. Three type maps can included report: Bookmark 'MAP_NB': Distribution cases country.    additional caption included location bookmark 'MAP_NB_CAPTION'. Bookmark 'MAP_RATE': Distribution cases    per 100 000 population country. additional caption included    location bookmark 'MAP_RATE_CAPTION'. Bookmark 'MAP_ASR': Distribution cases using    age-strandardised rates per 100 000 population country.    additional caption included location bookmark 'MAP_ASR_CAPTION'. (see ECDC reports https://www.ecdc.europa.eu/en/publications-data/monitoring/-annual-epidemiological-reports)","code":""},{"path":"/reference/getMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get disease-specific map: distribution of cases by Member State — getMap","text":"","code":"getMap(   disease = \"DENGUE\",   year = 2019,   reportParameters = EpiReport::AERparams,   index = 1,   pathPNG = system.file(\"maps\", package = \"EpiReport\"),   doc )"},{"path":"/reference/getMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get disease-specific map: distribution of cases by Member State — getMap","text":"disease character string, disease code (default \"DENGUE\"). year numeric, year produce map (default 2019). reportParameters dataframe, dataset including required parameters map report production (default AERparams) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) index integer, figure number pathPNG character string, full path folder containing maps PNG (default 'maps' folder included package system.file(\"maps\", package = \"EpiReport\")) doc 'Word' document (see 'officer' package) add maps bookmark location. doc missing, getMap returns preview PNG image.","code":""},{"path":"/reference/getMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get disease-specific map: distribution of cases by Member State — getMap","text":"'Word' doc image preview","code":""},{"path":[]},{"path":"/reference/getMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get disease-specific map: distribution of cases by Member State — getMap","text":"","code":"# --- Preview of the PNG map using the default Dengue dataset getMap()  #> [1] \"/home/runner/work/_temp/Library/EpiReport/maps/DENGUE_2019.ALL.COUNT.png\"  # --- Plot using external PNG image # --- Please see examples in the vignette browseVignettes(package = \"EpiReport\") #> No vignettes found by browseVignettes(package = \"EpiReport\")"},{"path":"/reference/getSeason.html","id":null,"dir":"Reference","previous_headings":"","what":"Get disease-specific seasonality graph: distribution of cases by month — getSeason","title":"Get disease-specific seasonality graph: distribution of cases by month — getSeason","text":"Function returning plot describing seasonality disease included epidemiological report bookmark location 'TS_SEASON' template report.  graph includes distribution cases EU/EEA level, month, past five years, : number cases month reference year (green solid line) mean number cases month four previous years (grey dashed line) minimum number cases month four previous years (grey area) maximum number cases month four previous years (grey area) (see ECDC reports https://www.ecdc.europa.eu/en/publications-data/monitoring/-annual-epidemiological-reports)","code":""},{"path":"/reference/getSeason.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get disease-specific seasonality graph: distribution of cases by month — getSeason","text":"","code":"getSeason(   x = EpiReport::DENGUE2019,   disease = \"DENGUE\",   year = 2019,   reportParameters = EpiReport::AERparams,   MSCode = EpiReport::MSCode,   index = 1,   doc )"},{"path":"/reference/getSeason.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get disease-specific seasonality graph: distribution of cases by month — getSeason","text":"x dataframe, raw disease-specific dataset (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) (default DENGUE2019) disease character string, disease code (default \"DENGUE\"). Please make sure disease code included disease-specific dataset x HealthTopicCode variable. year numeric, year produce graph (default 2019). Please make sure year included disease-specific dataset x TimeCode variable. reportParameters dataframe, dataset including required parameters graph report production (default AERparams) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) MSCode dataframe, correspondence table GeoCode names codes (default MSCode) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) index integer, figure number doc 'Word' document (see 'officer' package) add graph bookmark location. doc missing, getSeason returns ggplot2 object.","code":""},{"path":"/reference/getSeason.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get disease-specific seasonality graph: distribution of cases by month — getSeason","text":"'Word' doc ggplot2 object","code":""},{"path":[]},{"path":"/reference/getSeason.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get disease-specific seasonality graph: distribution of cases by month — getSeason","text":"","code":"# --- Plot using the default dataset getSeason()   # --- Plot using external dataset # --- Please see examples in the vignette browseVignettes(package = \"EpiReport\") #> No vignettes found by browseVignettes(package = \"EpiReport\")"},{"path":"/reference/getTableByMS.html","id":null,"dir":"Reference","previous_headings":"","what":"Get disease-specific table: distribution of cases by Member State (GeoCode) — getTableByMS","title":"Get disease-specific table: distribution of cases by Member State (GeoCode) — getTableByMS","text":"Function returning table ('flextable') included epidemiological report bookmark location 'TABLE1' template report. additional caption included location bookmark 'TABLE1_CAPTION'.  (see Table 1 ECDC annual reports https://www.ecdc.europa.eu/en/publications-data/monitoring/-annual-epidemiological-reports)","code":""},{"path":"/reference/getTableByMS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get disease-specific table: distribution of cases by Member State (GeoCode) — getTableByMS","text":"","code":"getTableByMS(   x = EpiReport::DENGUE2019,   disease = \"DENGUE\",   year = 2019,   reportParameters = EpiReport::AERparams,   MSCode = EpiReport::MSCode,   index = 1,   doc )"},{"path":"/reference/getTableByMS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get disease-specific table: distribution of cases by Member State (GeoCode) — getTableByMS","text":"x dataframe, raw disease-specific dataset (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) (default DENGUE2019) disease character string, disease code (default \"DENGUE\"). Please make sure disease code included disease-specific dataset x HealthTopicCode variable. year numeric, year produce table (default 2019). Please make sure year included disease-specific dataset x TimeCode variable. reportParameters dataframe, dataset including required parameters report production (default AERparams) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) MSCode dataframe, correspondence table GeoCode names codes (default MSCode) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) index integer, figure number doc 'Word' document (see officer package) add table bookmark location. doc missing, getTable returns flextable table object.","code":""},{"path":"/reference/getTableByMS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get disease-specific table: distribution of cases by Member State (GeoCode) — getTableByMS","text":"'Word' doc flextable object (see 'flextable' package)","code":""},{"path":"/reference/getTableByMS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get disease-specific table: distribution of cases by Member State (GeoCode) — getTableByMS","text":"current version 'EpiReport' package includes three types table (see detailed specification tables package vignette browseVignettes(package = \"EpiReport\")): COUNT - Table presenting number cases Member State (GeoCode) 5-year period; RATE - Table presenting number cases rates Member State (GeoCode) 5-year period; ASR - Table presenting number cases rates Member State (GeoCode) 5-year period,    including age-standardised rates recent year.","code":""},{"path":[]},{"path":"/reference/getTableByMS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get disease-specific table: distribution of cases by Member State (GeoCode) — getTableByMS","text":"Country 2015 2016 2017 2018 2019 Number Rate Number Rate Number Rate Number Rate Number Rate ASR Austria 103 1.2 116 1.3 85 1.0 85 1.0 142 1.6 1.7 Belgium 108 1.0 114 1.0 77 0.7 101 0.9 202 1.8 1.9 Bulgaria . . . . . . . . . . . Croatia - - 2 0.0 0 0.0 2 0.0 4 0.1 0.1 Cyprus . . . . . . . . . . . Czechia 0 0.0 0 0.0 0 0.0 0 0.0 0 0.0 0.0 Denmark . . . . . . . . . . . Estonia 12 0.9 9 0.7 8 0.6 6 0.5 6 0.5 0.5 Finland 54 1.0 66 1.2 25 0.5 56 1.0 81 1.5 1.6 France 285 0.4 373 0.6 266 0.4 331 0.5 904 1.3 1.4 Germany 722 0.9 958 1.2 635 0.8 614 0.7 1175 1.4 1.5 Greece 2 0.0 2 0.0 1 0.0 2 0.0 10 0.1 0.1 Hungary 12 0.1 24 0.2 17 0.2 14 0.1 44 0.5 0.5 Iceland 0 0.0 0 0.0 1 0.3 1 0.3 4 1.1 1.1 Ireland 8 0.2 18 0.4 10 0.2 17 0.4 18 0.4 0.4 Italy 103 0.2 106 0.2 95 0.2 108 0.2 231 0.4 0.4 Latvia 4 0.2 9 0.5 13 0.7 12 0.6 11 0.6 0.6 Liechtenstein . . . . . . . . . . . Lithuania 9 0.3 4 0.1 4 0.1 8 0.3 9 0.3 0.4 Luxembourg 0 0.0 1 0.2 0 0.0 1 0.2 1 0.2 0.2 Malta 1 0.2 1 0.2 3 0.7 1 0.2 2 0.4 0.4 Netherlands 18 - 6 - 0 - 0 - 0 - - Norway 98 1.9 64 1.2 35 0.7 49 0.9 102 1.9 2.0 Poland 12 0.0 41 0.1 29 0.1 30 0.1 55 0.1 0.1 Portugal 14 0.1 13 0.1 11 0.1 14 0.1 30 0.3 0.3 Romania 7 0.0 8 0.0 7 0.0 4 0.0 15 0.1 0.1 Slovakia 2 0.0 4 0.1 2 0.0 7 0.1 6 0.1 0.1 Slovenia 3 0.1 6 0.3 5 0.2 8 0.4 21 1.0 1.1 Spain 168 0.4 261 0.6 128 0.3 205 0.4 228 0.5 0.5 Sweden 159 1.6 225 2.3 106 1.1 106 1.0 235 2.3 2.4 United Kingdom 423 0.7 468 0.7 465 0.7 432 0.7 827 1.2 1.3 EU-EEA 2327 0.5 2899 0.6 2028 0.4 2214 0.5 4363 0.9 0.9","code":"# --- Draft the table using the default Dengue dataset getTableByMS() .cl-d0a20046{}.cl-d098f5e6{font-family:'Tahoma';font-size:7pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-d098f622{font-family:'Tahoma';font-size:7pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-d098f62c{font-family:'Tahoma';font-size:7pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-d09c1f0a{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-d09c1f14{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-d09c48fe{width:1.066in;background-color:rgba(101, 179, 46, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 1pt solid rgba(255, 255, 255, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c48ff{width:0.721in;background-color:rgba(101, 179, 46, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(255, 255, 255, 1.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 1pt solid rgba(255, 255, 255, 1.00);border-right: 1pt solid rgba(255, 255, 255, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4908{width:0.538in;background-color:rgba(101, 179, 46, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(255, 255, 255, 1.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 1pt solid rgba(255, 255, 255, 1.00);border-right: 1pt solid rgba(255, 255, 255, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4909{width:0.721in;background-color:rgba(101, 179, 46, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(255, 255, 255, 1.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 1pt solid rgba(255, 255, 255, 1.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4912{width:0.505in;background-color:rgba(101, 179, 46, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(255, 255, 255, 1.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 1pt solid rgba(255, 255, 255, 1.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4913{width:1.066in;background-color:rgba(101, 179, 46, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 1pt solid rgba(255, 255, 255, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 1pt solid rgba(255, 255, 255, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4914{width:0.721in;background-color:rgba(101, 179, 46, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 1pt solid rgba(255, 255, 255, 1.00);border-left: 1pt solid rgba(255, 255, 255, 1.00);border-right: 1pt solid rgba(255, 255, 255, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4915{width:0.538in;background-color:rgba(101, 179, 46, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 1pt solid rgba(255, 255, 255, 1.00);border-left: 1pt solid rgba(255, 255, 255, 1.00);border-right: 1pt solid rgba(255, 255, 255, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c491c{width:0.505in;background-color:rgba(101, 179, 46, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 1pt solid rgba(255, 255, 255, 1.00);border-left: 1pt solid rgba(255, 255, 255, 1.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c491d{width:1.066in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4926{width:0.721in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4927{width:0.538in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4928{width:0.505in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4929{width:1.066in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4930{width:0.721in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4931{width:0.538in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4932{width:0.505in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4933{width:1.066in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c493a{width:0.721in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c493b{width:0.538in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c493c{width:0.505in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c493d{width:1.066in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4944{width:0.721in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4945{width:0.538in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4946{width:0.505in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c494e{width:1.066in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c494f{width:0.721in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4950{width:0.538in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4951{width:0.505in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4958{width:1.066in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4959{width:0.721in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c495a{width:0.538in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-d09c4962{width:0.505in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(199, 199, 199, 1.00);border-top: 1pt solid rgba(199, 199, 199, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Country20152016201720182019NumberRateNumberRateNumberRateNumberRateNumberRateASRAustria 1031.2 1161.3  851.0  851.0 1421.61.7Belgium 1081.0 1141.0  770.7 1010.9 2021.81.9Bulgaria...........Croatia--   20.0   00.0   20.0   40.10.1Cyprus...........Czechia   00.0   00.0   00.0   00.0   00.00.0Denmark...........Estonia  120.9   90.7   80.6   60.5   60.50.5Finland  541.0  661.2  250.5  561.0  811.51.6France 2850.4 3730.6 2660.4 3310.5 9041.31.4Germany 7220.9 9581.2 6350.8 6140.711751.41.5Greece   20.0   20.0   10.0   20.0  100.10.1Hungary  120.1  240.2  170.2  140.1  440.50.5Iceland   00.0   00.0   10.3   10.3   41.11.1Ireland   80.2  180.4  100.2  170.4  180.40.4Italy 1030.2 1060.2  950.2 1080.2 2310.40.4Latvia   40.2   90.5  130.7  120.6  110.60.6Liechtenstein...........Lithuania   90.3   40.1   40.1   80.3   90.30.4Luxembourg   00.0   10.2   00.0   10.2   10.20.2Malta   10.2   10.2   30.7   10.2   20.40.4Netherlands  18-   6-   0-   0-   0--Norway  981.9  641.2  350.7  490.9 1021.92.0Poland  120.0  410.1  290.1  300.1  550.10.1Portugal  140.1  130.1  110.1  140.1  300.30.3Romania   70.0   80.0   70.0   40.0  150.10.1Slovakia   20.0   40.1   20.0   70.1   60.10.1Slovenia   30.1   60.3   50.2   80.4  211.01.1Spain 1680.4 2610.6 1280.3 2050.4 2280.50.5Sweden 1591.6 2252.3 1061.1 1061.0 2352.32.4United Kingdom 4230.7 4680.7 4650.7 4320.7 8271.21.3EU-EEA23270.528990.620280.422140.543630.90.9"},{"path":"/reference/getTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Get epidemiological report (empty) template — getTemplate","title":"Get epidemiological report (empty) template — getTemplate","text":"Function export generic 'Microsoft Word' empty template (included 'EpiReport' package) used produce epidemiological report similar ECDC Annual Epidemiological Report (AER). modified version template can used produce final epidemiological report using getAER(template = 'NewTemplate.docx', ...)  (see package vignette \"Epidemiological Report Package\" browseVignettes(\"EpiReport\"))   (see ECDC annual epidemilogical reports https://www.ecdc.europa.eu/en/publications-data/monitoring/-annual-epidemiological-reports)","code":""},{"path":"/reference/getTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get epidemiological report (empty) template — getTemplate","text":"","code":"getTemplate(output_path)"},{"path":"/reference/getTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get epidemiological report (empty) template — getTemplate","text":"output_path character string, full path create 'Word' output. Defaut location current working directory (default getwd())","code":""},{"path":"/reference/getTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get epidemiological report (empty) template — getTemplate","text":"'Word' document","code":""},{"path":[]},{"path":"/reference/getTemplate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get epidemiological report (empty) template — getTemplate","text":"","code":"if (FALSE) { # \\dontrun{ # --- Export the template in the default folder: working directory getTemplate()  # --- Or specify the full path getTemplate(output_path = getwd()) } # }"},{"path":"/reference/getTrend.html","id":null,"dir":"Reference","previous_headings":"","what":"Get disease-specific trend plot: trend and number of cases by month — getTrend","title":"Get disease-specific trend plot: trend and number of cases by month — getTrend","text":"Function returning plot describing trend disease time included epidemiological report bookmark location 'TS_TREND' template report.  graph includes number cases EU/EEA level, month, past five years, : number cases month 5-year period (grey solid line) 12-month moving average number cases month (green solid line) (see ECDC reports https://www.ecdc.europa.eu/en/publications-data/monitoring/-annual-epidemiological-reports)","code":""},{"path":"/reference/getTrend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get disease-specific trend plot: trend and number of cases by month — getTrend","text":"","code":"getTrend(   x = EpiReport::DENGUE2019,   disease = \"DENGUE\",   year = 2019,   reportParameters = EpiReport::AERparams,   MSCode = EpiReport::MSCode,   index = 1,   doc )"},{"path":"/reference/getTrend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get disease-specific trend plot: trend and number of cases by month — getTrend","text":"x dataframe, raw disease-specific dataset (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) (default DENGUE2019) disease character string, disease code (default \"DENGUE\"). Please make sure disease code included disease-specific dataset x HealthTopicCode variable. year numeric, year produce graph (default 2019). Please make sure year included disease-specific dataset x TimeCode variable. reportParameters dataframe, dataset including required parameters graph report production (default AERparams) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) MSCode dataframe, correspondence table GeoCode names codes (default MSCode) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) index integer, figure number doc 'Word' document (see officer package) add graph bookmark location. doc missing, getTrend returns ggplot2 object.","code":""},{"path":"/reference/getTrend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get disease-specific trend plot: trend and number of cases by month — getTrend","text":"'Word' doc ggplot2 preview","code":""},{"path":[]},{"path":"/reference/getTrend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get disease-specific trend plot: trend and number of cases by month — getTrend","text":"","code":"# --- Plot using the default dataset getTrend()   # --- Plot using external dataset # --- Please see examples in the vignette browseVignettes(package = \"EpiReport\") #> No vignettes found by browseVignettes(package = \"EpiReport\")"},{"path":"/reference/includemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Including PNG map in the 'Microsoft Word' template — includeMap","title":"Including PNG map in the 'Microsoft Word' template — includeMap","text":"Function including disease-specific PNG map 'Word' document specific bookmark location.","code":""},{"path":"/reference/includemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Including PNG map in the 'Microsoft Word' template — includeMap","text":"","code":"includeMap(   disease,   year,   reportParameters,   index,   pathPNG,   doc,   pop,   namePNGsuffix,   unit,   mapBookmark,   captionBookmark )"},{"path":"/reference/includemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Including PNG map in the 'Microsoft Word' template — includeMap","text":"disease character string, disease code (default \"DENGUE\"). year numeric, year produce graph (default 2019). reportParameters dataframe, dataset including required parameters graph report production (default AERparams) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) index integer, figure number pathPNG character string, full path folder containing maps PNG (default 'maps' folder included package system.file(\"maps\", package = \"EpiReport\")) doc 'Word' document (see 'officer' package) add maps bookmark location pop character string, label type population use caption (e.g. confirmed) namePNGsuffix character string, suffix PNG file name map (.e. \"COUNT\", \"RATE\" \"AGESTANDARDISED\".) unit character string, label unit used caption (e.g. \"per 100 000 population\") mapBookmark character string, label bookmark add map 'Word' document captionBookmark character string, label bookmark add caption 'Word' document","code":""},{"path":"/reference/includemap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Including PNG map in the 'Microsoft Word' template — includeMap","text":"'Word' doc","code":""},{"path":[]},{"path":"/reference/orderQuasinum.html","id":null,"dir":"Reference","previous_headings":"","what":"Order 'quasinumerical' categorical vectors (increasing order) — orderQuasinum","title":"Order 'quasinumerical' categorical vectors (increasing order) — orderQuasinum","text":"function order 'quasinumerical' (.e. categorical values \"15-30\" \"<18\") integer vectors increasing order. Currently handles away following non-numerical characters \"-\", \">\", \"<\", \">=\", \"<=\", \"+\".","code":""},{"path":"/reference/orderQuasinum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order 'quasinumerical' categorical vectors (increasing order) — orderQuasinum","text":"","code":"orderQuasinum(x)"},{"path":"/reference/orderQuasinum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order 'quasinumerical' categorical vectors (increasing order) — orderQuasinum","text":"x character vector 'quasinumerical' values","code":""},{"path":[]},{"path":"/reference/orderQuasinum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Order 'quasinumerical' categorical vectors (increasing order) — orderQuasinum","text":"Tommi Karki","code":""},{"path":"/reference/orderQuasinum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order 'quasinumerical' categorical vectors (increasing order) — orderQuasinum","text":"","code":"age1 <- c(\"<1\", \"1-15\", \"16-25\", \">65\", \"26-65\") age2 <- c(\"0-4\", \"5-10\", \">65\", \"25-64\", \"11-25\") age3 <- c(\"5-10\", \">65\", \"25-64\", \"11-25\", \"<=4\") age4 <- c(\">=65\", \"<18\", \"18-64\") age5 <- c(\"5-10\", \"+65\", \"25-64\", \"11-25\", \"0-4\")  age1 #> [1] \"<1\"    \"1-15\"  \"16-25\" \">65\"   \"26-65\" orderQuasinum(age1) #> [1] \"<1\"    \"1-15\"  \"16-25\" \"26-65\" \">65\"   age2 #> [1] \"0-4\"   \"5-10\"  \">65\"   \"25-64\" \"11-25\" orderQuasinum(age2) #> [1] \"0-4\"   \"5-10\"  \"11-25\" \"25-64\" \">65\"   age3 #> [1] \"5-10\"  \">65\"   \"25-64\" \"11-25\" \"<=4\"   orderQuasinum(age3) #> [1] \"<=4\"   \"5-10\"  \"11-25\" \"25-64\" \">65\"   age4 #> [1] \">=65\"  \"<18\"   \"18-64\" orderQuasinum(age4) #> [1] \"<18\"   \"18-64\" \">=65\"  age5 #> [1] \"5-10\"  \"+65\"   \"25-64\" \"11-25\" \"0-4\"   orderQuasinum(age5) #> [1] \"0-4\"   \"5-10\"  \"11-25\" \"25-64\" \"+65\""},{"path":"/reference/plotAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Age bar graph — plotAge","title":"Age bar graph — plotAge","text":"(Discouraged function. Please use plotBarGrouped() instead.)","code":""},{"path":"/reference/plotAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age bar graph — plotAge","text":"","code":"plotAge(   .data,   xvar = \"XLabel\",   yvar = \"YValue\",   fill_color1 = \"#65B32E\",   ytitle = \"Rate\" )"},{"path":"/reference/plotAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age bar graph — plotAge","text":".data dataframe containing variables plot xvar character string, name variable plot x-axis quotes (default \"XLabel\") yvar character string, name variable plot y-axis quotes (default \"YValue\") fill_color1 character string, hexadecimal colour use graph; (default ECDC green \"#65B32E\", see EcdcColors(col_scale = \"qual\", n = 1)) ytitle character string, y-axis title; (default \"Rate\").","code":""},{"path":"/reference/plotAge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Age bar graph — plotAge","text":"function draws bar graph age group (possibly grouping).  bar graph presents distribution cases EU/EEA level using rate per 100 000 cases age.  Expects aggregated data.","code":""},{"path":[]},{"path":"/reference/plotAge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Age bar graph — plotAge","text":"","code":"# --- Create dummy data mydat <- data.frame(AgeGroup = c(\"0-25\", \"26-65\", \"65+\"),                     NumberOfCases = c(54,32,41))  # --- Plot the dummy data plotAge(mydat,         xvar = \"AgeGroup\",         yvar = \"NumberOfCases\",         ytitle = \"Number of cases\")"},{"path":"/reference/plotAgeGender.html","id":null,"dir":"Reference","previous_headings":"","what":"Age and Gender bar graph — plotAgeGender","title":"Age and Gender bar graph — plotAgeGender","text":"(Discouraged function. Please use plotBarGrouped() instead.)","code":""},{"path":"/reference/plotAgeGender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age and Gender bar graph — plotAgeGender","text":"","code":"plotAgeGender(   .data,   xvar = \"XLabel\",   yvar = \"ZValue\",   group = \"YLabel\",   fill_color1 = \"#65B32E\",   fill_color2 = \"#7CBDC4\",   ytitle = \"Rate\" )"},{"path":"/reference/plotAgeGender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age and Gender bar graph — plotAgeGender","text":".data dataframe containing variables plot xvar character string, name variable plot x-axis quotes (default \"XLabel\") yvar character string, name variable plot y-axis quotes (default \"ZValue\") group character string, name grouping variable quotes, e.g. gender. (default \"YLabel\") fill_color1 character string, hexadecimal colour use graph bar 1; (default ECDC green \"#65B32E\", see EcdcColors(col_scale = \"qual\", n = 2)) fill_color2 character string, hexadecimal colour use graph bar 2; (default ECDC blue \"#7CBDC4\", see EcdcColors(col_scale = \"qual\", n = 2)) ytitle character string, y-axis title; (default \"Rate\").","code":""},{"path":"/reference/plotAgeGender.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Age and Gender bar graph — plotAgeGender","text":"function draws bar graph distribution cases age group gender (possibly grouping).  bar graph presents distribution cases EU/EEA level using either: AG-COUNT: number cases age gender AG-RATE: rate per 100 000 cases age gender AG-PROP: proportion cases age gender Expects aggregated data.","code":""},{"path":[]},{"path":"/reference/plotAgeGender.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Age and Gender bar graph — plotAgeGender","text":"","code":"# --- Create dummy data mydat <- data.frame(Gender=c(\"F\", \"F\", \"M\", \"M\"),                     AgeGroup = c(\"0-65\", \"65+\", \"0-65\", \"65+\"),                     NumberOfCases = c(54,43,32,41))  # --- Plot the dummy data plotAgeGender(mydat,               xvar = \"AgeGroup\",               yvar = \"NumberOfCases\",               group = \"Gender\",               ytitle = \"Number of cases\")"},{"path":"/reference/plotBar.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar graph — plotBar","title":"Bar graph — plotBar","text":"function draws bar graph values variable 'Yvar' categorical variable 'Xvar' x-axis.  Expects aggregated data.","code":""},{"path":"/reference/plotBar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar graph — plotBar","text":"","code":"plotBar(   .data,   xvar = \"XLabel\",   xlabel = \"\",   yvar = \"YValue\",   ylabel = \"\",   fill_color = EcdcColors(col_scale = \"qual\", n = 1) )"},{"path":"/reference/plotBar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar graph — plotBar","text":".data dataframe containing variables plot xvar character string, name variable plot x-axis quotes (default \"XLabel\") xlabel character string, label x axis yvar character string, name variable plot y-axis quotes (default \"YValue\") ylabel character string, label y axis fill_color character string, hexadecimal colour use graph; (default ECDC green \"#65B32E\", see EcdcColors(col_scale = \"qual\", n = 1))","code":""},{"path":[]},{"path":"/reference/plotBar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bar graph — plotBar","text":"","code":"# --- Create dummy data mydat <- data.frame(AgeGroup = c(\"0-25\", \"26-65\", \"65+\"),                     NumberOfCases = c(54,32,41))  # --- Plot the dummy data plotBar(mydat,         xvar = \"AgeGroup\",         xlabel = \"Age\",         yvar = \"NumberOfCases\",         ylabel = \"Number of cases\")"},{"path":"/reference/plotBarGrouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Grouped bar graph — plotBarGrouped","title":"Grouped bar graph — plotBarGrouped","text":"function draws vertical grouped bar graph values variable 'Yvar' categorical variable 'Xvar' x-axis grouped 'Group' categorical variable.  Expects aggregated data.","code":""},{"path":"/reference/plotBarGrouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grouped bar graph — plotBarGrouped","text":"","code":"plotBarGrouped(   .data,   xvar = \"XLabel\",   xlabel = \"\",   yvar = \"ZValue\",   ylabel = \"\",   group = \"YLabel\",   fill_color = EcdcColors(col_scale = \"qual\", n = length(unique(.data[[group]]))),   position = \"dodge\" )"},{"path":"/reference/plotBarGrouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grouped bar graph — plotBarGrouped","text":".data dataframe containing variables plot xvar character string, name variable plot x-axis quotes (default \"XLabel\") xlabel character string, label x axis yvar character string, name variable plot y-axis quotes (default \"ZValue\") ylabel character string, label y axis group character string, name grouping variable quotes, e.g. gender. (default \"YLabel\"). fill_color vector character strings, hexadecimal colour use graph bars; vector contain number categories \"group\" variable. (default ECDC blue \"#7CBDC4\" ECDC green \"#65B32E\", see EcdcColors(col_scale = \"qual\", n = 2)) position character string, position bars, either \"dodge\" \"stack\" (default \"dodge\", see geom_bar(position = ... )).","code":""},{"path":[]},{"path":"/reference/plotBarGrouped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grouped bar graph — plotBarGrouped","text":"","code":"# --- Create dummy data mydat <- data.frame(Gender=c(\"F\", \"F\", \"M\", \"M\"),                     AgeGroup = c(\"0-65\", \"65+\", \"0-65\", \"65+\"),                     NumberOfCases = c(30, 35, 70, 65))  # --- Plot the dummy data plotBarGrouped(mydat,               xvar = \"AgeGroup\",               xlabel = \"Age\",               yvar = \"NumberOfCases\",               ylabel = \"Number of cases\",               group = \"Gender\")   # -- Create dummy data mydat <- data.frame(VaccStatus = rep(c(\"Unvaccinated\", \"1 dose\", \"2 doses\", \"3 doses\"), 3),                     AgeGroup = rep(c(\"<1\", \"1-4\", \"5-9\") , each = 4),                     Proportion = c(90, 10, 0, 0,                                    30, 50, 20, 0,                                    10, 25, 35, 30)) mydat$VaccStatus <- factor(mydat$VaccStatus,                            levels = c(\"Unvaccinated\", \"1 dose\", \"2 doses\", \"3 doses\")) plotBarGrouped(mydat,                xvar = \"AgeGroup\",                xlabel = \"Age (years)\",                yvar = \"Proportion\",                ylabel = \"Proportion of cases %\",                group = \"VaccStatus\",                position = \"stack\")"},{"path":"/reference/plotBarGroupedH.html","id":null,"dir":"Reference","previous_headings":"","what":"Horizontal grouped bar graph — plotBarGroupedH","title":"Horizontal grouped bar graph — plotBarGroupedH","text":"function draws horizontal bar graph values variable 'Yvar' categorical variable 'Xvar' x-axis.  Expects aggregated data.","code":""},{"path":"/reference/plotBarGroupedH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Horizontal grouped bar graph — plotBarGroupedH","text":"","code":"plotBarGroupedH(   .data,   xvar = \"\",   xlabel = \"\",   yvar = \"\",   ylabel = \"\",   group = \"\",   fill_color = EcdcColors(col_scale = \"qual\", n = length(unique(.data[[group]]))),   log10_scale = FALSE )"},{"path":"/reference/plotBarGroupedH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Horizontal grouped bar graph — plotBarGroupedH","text":".data dataframe containing variables plot xvar character string, name categorical variable plot x-axis quotes xlabel character string, label x axis yvar character string, name numerical variable plot y-axis quotes ylabel character string, label y axis group character string, name grouping variable quotes, e.g. gender. fill_color character string, hexadecimal colour use graph; (default ECDC green \"#65B32E\", see EcdcColors(col_scale = \"qual\", n = 1)) log10_scale boolean, TRUE y-axis log scale (default FALSE ,see ggplot2::scale_y_log10)","code":""},{"path":[]},{"path":"/reference/plotBarGroupedH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Horizontal grouped bar graph — plotBarGroupedH","text":"","code":"# --- Create dummy data mydat <- data.frame(Gender=c(\"F\", \"F\", \"M\", \"M\"),                     AgeGroup = c(\"0-65\", \"65+\", \"0-65\", \"65+\"),                     NumberOfCases = c(54,43,32,41))  # --- Plot the dummy data plotBarGroupedH(mydat,               xvar = \"AgeGroup\",               xlabel = \"Age\",               yvar = \"NumberOfCases\",               ylabel = \"Number of cases\",               group = \"Gender\")"},{"path":"/reference/plotBarH.html","id":null,"dir":"Reference","previous_headings":"","what":"Horizontal bar graph — plotBarH","title":"Horizontal bar graph — plotBarH","text":"function draws horizontal bar graph values variable 'Yvar' categorical variable 'Xvar' x-axis.  Expects aggregated data.","code":""},{"path":"/reference/plotBarH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Horizontal bar graph — plotBarH","text":"","code":"plotBarH(   .data,   xvar = \"\",   xlabel = \"\",   yvar = \"\",   ylabel = \"\",   fill_color = EcdcColors(col_scale = \"qual\", n = 1),   log10_scale = FALSE,   xlabel_black = \"\" )"},{"path":"/reference/plotBarH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Horizontal bar graph — plotBarH","text":".data dataframe containing variables plot xvar character string, name categorical variable plot x-axis quotes xlabel character string, label x axis yvar character string, name numerical variable plot y-axis quotes ylabel character string, label y axis fill_color character string, hexadecimal colour use graph; (default ECDC green \"#65B32E\", see EcdcColors(col_scale = \"qual\", n = 1)) log10_scale boolean, TRUE y-axis log scale (default FALSE ,see ggplot2::scale_y_log10) xlabel_black (optional) character string, value categorical variable bar black","code":""},{"path":[]},{"path":"/reference/plotBarH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Horizontal bar graph — plotBarH","text":"","code":"# --- Create dummy data mfratio <- data.frame( Country = sample(EpiReport::MSCode$Country, 28),                        Ratio = runif(28, min = 0, max = 28))  # --- Plot the dummy data plotBarH(mfratio,          xvar = \"Country\",          xlabel = \"\",          yvar = \"Ratio\",          ylabel = \"Male-to-Female ratio\",          log10_scale = FALSE)  plotBarH(mfratio,          xvar = \"Country\",          xlabel = \"\",          yvar = \"Ratio\",          ylabel = \"Male-to-Female ratio\",          log10_scale = TRUE,          xlabel_black = \"EU-EEA\")"},{"path":"/reference/plotPie.html","id":null,"dir":"Reference","previous_headings":"","what":"Pie chart — plotPie","title":"Pie chart — plotPie","text":"function draws pie chart values variable 'Xvar' labels categorical variable 'Labels'.  Expects aggregated data.","code":""},{"path":"/reference/plotPie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pie chart — plotPie","text":"","code":"plotPie(   .data,   xvar = \"\",   labels = \"\",   fill_colors = EcdcColors(col_scale = \"qual\", n = nrow(.data)) )"},{"path":"/reference/plotPie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pie chart — plotPie","text":".data dataframe containing variables plot xvar character string, name numerical variable plot quotes labels character string, name character variable including corresponding labels fill_colors vector character strings, hexadecimal colours use labels piechart; vector contain exact number categories defined \"labels\" variable. (default ECDC colors, see EcdcColors(col_scale = \"qual\", n = nrow(.data)))","code":""},{"path":[]},{"path":"/reference/plotPie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pie chart — plotPie","text":"","code":"# --- Create dummy data piechart <- data.frame(Labels = c(\"Heterosexual females\",                                   \"Heterosexual males\",                                   \"MSM\",                                   \"Unknow\"),                        Values = c(1633,2937,15342,2854))  # --- Plot the dummy data plotPie(piechart,          xvar = \"Values\",          labels = \"Labels\")"},{"path":"/reference/plotSeasonality.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonality line graph — plotSeasonality","title":"Seasonality line graph — plotSeasonality","text":"function draws line graph describing seasonality selected disease past 5 years.  graph includes distribution cases, month, past five years, : yvar: number cases month reference year (green solid line) mean4years: mean number cases month four previous years (grey dashed line) min4years: minimum number cases month four previous years (grey area) max4years: maximum number cases month four previous years (grey area) Expects aggregated data pre-calculated min, max mean figures.","code":""},{"path":"/reference/plotSeasonality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonality line graph — plotSeasonality","text":"","code":"plotSeasonality(   .data,   xvar = \"TimeCode\",   yvar = \"N\",   min4years = \"Min4Years\",   max4years = \"Max4Years\",   mean4years = \"Mean4Years\",   year = 2016 )"},{"path":"/reference/plotSeasonality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonality line graph — plotSeasonality","text":".data dataframe containing variables plot xvar character string, name time variable x-axis quotes (default \"TimeCode\") yvar character string, name variable plot y-axis quotes (default \"N\"), number cases month reference year (green solid line) min4years character string, name variable plot quotes including minimum number cases month past 4 years (default \"Min4Years\") max4years character string, name variable plot quotes including maximum number cases month past 4 years (default \"Max4Years\") mean4years character string, name variable plot quotes including mean number cases month past 4 years (default \"Mean4Years\") year numeric, year produce graph (default 2016).","code":""},{"path":[]},{"path":"/reference/plotSeasonality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seasonality line graph — plotSeasonality","text":"","code":"# --- Plot using external dataset  # Create a dummy dataset test <- data.frame(Time = as.Date(paste0(\"2019-\",c(1:12), \"-01\")),                    N = sample(c(5000:7000), 12),                    mean = sample(c(4000:5000), 12),                    low = sample(c(3000:4000), 12),                    high = sample(c(5000:6000), 12))  # Plot the dummy data plotSeasonality(test,                 xvar = \"Time\",                 yvar = \"N\",                 min4years = \"low\",                 max4years = \"high\",                 mean4years = \"mean\",                 year = 2019)   # --- Please see examples in the vignette browseVignettes(package = \"EpiReport\") #> No vignettes found by browseVignettes(package = \"EpiReport\")  # --- Plot using the default dataset getSeason()"},{"path":"/reference/plotTS.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series plot — plotTS","title":"Time series plot — plotTS","text":"function draws time series values variable 'Yvar' time variable 'Xvar' x-axis.  Expects aggregated data.","code":""},{"path":"/reference/plotTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series plot — plotTS","text":"","code":"plotTS(   .data,   xvar = \"\",   xlabel = \"\",   yvar = \"\",   ylabel = \"\",   fill_color = EcdcColors(col_scale = \"qual\", n = 1),   log10_scale = FALSE,   xvar_format = \"%Y\",   xvar_breaks = \"1 year\" )"},{"path":"/reference/plotTS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time series plot — plotTS","text":".data dataframe containing variables plot xvar character string, name time variable (expects date format) plot x-axis quotes xlabel character string, label x axis yvar character string, name numerical variable plot y-axis quotes ylabel character string, label y axis fill_color character string, hexadecimal colour use graph; (default ECDC green \"#65B32E\", see EcdcColors(col_scale = \"qual\", n = 1) log10_scale boolean, TRUE y-axis log scale (default FALSE ,see ggplot2::scale_y_log10) xvar_format character string, time format use plot x-axis (\"%Y\" yearly labels \"%b %Y\" monthly labels) xvar_breaks character string, time unit use plot x-axis breaks (\"1 year\" \"1 month\", see ggplot2::scale_x_date(date_breaks = ... ))","code":""},{"path":[]},{"path":"/reference/plotTS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series plot — plotTS","text":"","code":"# --- Create dummy data mydat <- data.frame(TimeCode = seq(as.Date(\"2008/1/1\"), as.Date(\"2017/1/1\"), \"years\"),                     YValue = sample(1:500/10, 10))  # --- Plot the dummy data plotTS(mydat,        xvar = \"TimeCode\",        xlabel = \"Year\",        yvar = \"YValue\",        ylabel = \"Rate per 100 000 population\",        log10_scale = FALSE,        xvar_format = \"%Y\",        xvar_breaks = \"1 year\")"},{"path":"/reference/plotTS12MAvg.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series with 12-month moving average — plotTS12MAvg","title":"Time series with 12-month moving average — plotTS12MAvg","text":"function draws line graph describing trend selected disease past 5 years.  graph includes trend number cases EU/EEA level, month, past five years, : yvar: number cases month 5-year period (grey solid line) movAverage: 12-month moving average number cases month (green solid line) Expects aggregated data pre-calculated 12-month moving average.","code":""},{"path":"/reference/plotTS12MAvg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series with 12-month moving average — plotTS12MAvg","text":"","code":"plotTS12MAvg(.data, xvar = \"TimeCode\", yvar = \"N\", movAverage = \"MAV\")"},{"path":"/reference/plotTS12MAvg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time series with 12-month moving average — plotTS12MAvg","text":".data dataframe containing variables plot xvar character string, name time variable plot x-axis quotes (default \"TimeCode\") yvar character string, name variable plot y-axis quotes (default \"N\"), number cases month 5-year period (grey solid line) movAverage character string, name variable plot quotes including moving average per time unit (default \"MAV\")","code":""},{"path":[]},{"path":"/reference/plotTS12MAvg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series with 12-month moving average — plotTS12MAvg","text":"","code":"# --- Plot using external dataset  # Create a dummy dataset test <- data.frame(Time = as.Date(paste0(\"2019-\",c(1:12), \"-01\")),                    N = sample(c(4000:6000), 12),                    mean = sample(c(4000:5000), 12))  # Plot the dummy data plotTS12MAvg(test,              xvar = \"Time\",              yvar = \"N\",              movAverage = \"mean\")"},{"path":"/reference/plotTSGrouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple time series plot — plotTSGrouped","title":"Multiple time series plot — plotTSGrouped","text":"function draws time series values variable 'Yvar' time variable 'Xvar' x-axis. categorical variable specify group observations one time series .  Expects aggregated data.","code":""},{"path":"/reference/plotTSGrouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple time series plot — plotTSGrouped","text":"","code":"plotTSGrouped(   .data,   xvar = \"\",   xlabel = \"\",   yvar = \"\",   ylabel = \"\",   group = \"\",   fill_color = EcdcColors(col_scale = \"qual\", n = length(unique(.data[[group]]))),   log10_scale = FALSE,   xvar_format = \"%Y\",   xvar_breaks = \"1 year\" )"},{"path":"/reference/plotTSGrouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple time series plot — plotTSGrouped","text":".data dataframe containing variables plot xvar character string, name time variable (expects date format) plot x-axis quotes xlabel character string, label x axis yvar character string, name numerical variable plot y-axis quotes ylabel character string, label y axis group character string, name grouping variable quotes, e.g. gender. fill_color character string, hexadecimal colour use graph; (default ECDC green \"#65B32E\", see EcdcColors(col_scale = \"qual\", n = length(unique(.data[[group]]))) log10_scale boolean, TRUE y-axis log scale (default FALSE ,see ggplot2::scale_y_log10) xvar_format character string, time format use plot x-axis (\"%Y\" yearly labels \"%b %Y\" monthly labels) xvar_breaks character string, time unit use plot x-axis breaks (\"1 year\" \"1 month\", see ggplot2::scale_x_date(date_breaks = ... ))","code":""},{"path":[]},{"path":"/reference/plotTSGrouped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple time series plot — plotTSGrouped","text":"","code":"# --- Create dummy data mydat <- data.frame(TimeCode = seq(as.Date(\"2008/1/1\"), as.Date(\"2017/1/1\"), \"years\"),                     YValue = sample(1:79/10, 20),                     YLabel = rep(c(\"Acute\", \"Chronic\"), each = 10))  # --- Plot the dummy data plotTSGrouped(mydat,               xvar = \"TimeCode\",               xlabel = \"Year\",               yvar = \"YValue\",               ylabel = \"Rate per 100 000 population\",               group = \"YLabel\",               log10_scale = TRUE,               xvar_format = \"%Y\",               xvar_breaks = \"1 year\")   # --- Create dummy data mydat <- data.frame(TimeCode = rep(seq(as.Date(\"2008/1/1\"), as.Date(\"2017/1/1\"), \"years\"), 5),                     YValue = c(sample(1:50/10, 10),                                sample(1:100/10, 10),                                sample(1:300/10, 10),                                sample(1:400/10, 10),                                sample(1:500/10, 10)),                     YLabel = rep(c(\"United Kingdom\",                                    \"France\",                                    \"Spain\",                                    \"Netherlands\",                                    \"Belgium\"), each = 10))  # --- Plot the dummy data plotTSGrouped(mydat,               xvar = \"TimeCode\",               xlabel = \"Year\",               yvar = \"YValue\",               ylabel = \"Rate per 100 000 population\",               group = \"YLabel\",               log10_scale = FALSE,               xvar_format = \"%Y\",               xvar_breaks = \"1 year\")"},{"path":"/reference/previewMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Previewing the PNG map — previewMap","title":"Previewing the PNG map — previewMap","text":"Function previewing disease-specific PNG map","code":""},{"path":"/reference/previewMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Previewing the PNG map — previewMap","text":"","code":"previewMap(disease, year, reportParameters, pathPNG, namePNGsuffix)"},{"path":"/reference/previewMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Previewing the PNG map — previewMap","text":"disease character string, disease code (default \"DENGUE\"). year numeric, year produce graph (default 2019). reportParameters dataframe, dataset including required parameters graph report production (default AERparams) (see specification dataset package vignette browseVignettes(package = \"EpiReport\")) pathPNG character string, full path folder containing maps PNG (default 'maps' folder included package system.file(\"maps\", package = \"EpiReport\")) namePNGsuffix character string, suffix PNG file name map (.e. \"COUNT\", \"RATE\" \"AGESTANDARDISED\".)","code":""},{"path":"/reference/previewMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Previewing the PNG map — previewMap","text":"Preview","code":""},{"path":[]},{"path":"/reference/shapeECDCFlexTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Shaping the final table (layout, title, color, font) — shapeECDCFlexTable","title":"Shaping the final table (layout, title, color, font) — shapeECDCFlexTable","text":"Shaping final table including titles, adding background color, specifying font name size.","code":""},{"path":"/reference/shapeECDCFlexTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shaping the final table (layout, title, color, font) — shapeECDCFlexTable","text":"","code":"shapeECDCFlexTable(ft, headers, fsize, fname, maincolor, lastbold)"},{"path":"/reference/shapeECDCFlexTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shaping the final table (layout, title, color, font) — shapeECDCFlexTable","text":"ft flextable (see 'flextable' package), table shape ECDC table layout headers dataframe including multiple headers add flextable object. Please note column col_keys contain names flextable object (.e. col_key = names(x)), accordingly set_header_df. fsize numeric, font use (Default 7) fname character, font name (Default \"Tahoma\") maincolor character string, hexadecimal code header background color (Default EcdcColors(col_scale = \"green\", n=1)) lastbold bolean, last row bold (Default TRUE), usually used last row includes totals (EU/EEA totals)","code":""},{"path":"/reference/shapeECDCFlexTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shaping the final table (layout, title, color, font) — shapeECDCFlexTable","text":"flextable object (see flextable package)","code":""},{"path":[]},{"path":"/reference/toCapTitle.html","id":null,"dir":"Reference","previous_headings":"","what":"Capitalise first letter — toCapTitle","title":"Capitalise first letter — toCapTitle","text":"Capitalise first letter character string order use title","code":""},{"path":"/reference/toCapTitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capitalise first letter — toCapTitle","text":"","code":"toCapTitle(str)"},{"path":"/reference/toCapTitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capitalise first letter — toCapTitle","text":"str character string capitalise title","code":""},{"path":"/reference/toCapTitle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capitalise first letter — toCapTitle","text":"character string","code":""},{"path":"/reference/toCapTitle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capitalise first letter — toCapTitle","text":"","code":"my_title <- \"number of salmonellosis cases by age group\" toCapTitle(my_title) #> [1] \"Number of salmonellosis cases by age group\""},{"path":[]},{"path":"/news/index.html","id":"new-feature-1-0-4","dir":"Changelog","previous_headings":"","what":"NEW FEATURE","title":"EpiReport 1.0.4 (2025-05-02)","text":"Adding pkgdown page","code":""},{"path":"/news/index.html","id":"epireport-103-2025-04-18","dir":"Changelog","previous_headings":"","what":"EpiReport 1.0.3 (2025-04-18)","title":"EpiReport 1.0.3 (2025-04-18)","text":"CRAN release: 2025-04-18","code":""},{"path":"/news/index.html","id":"bug-fixes-1-0-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiReport 1.0.3 (2025-04-18)","text":"Correction itemize brackets roxygen documentation Correction link external packages roxygen documentation Cleaning 4 dashes 3 dashes subsection inline documentation","code":""},{"path":"/news/index.html","id":"epireport-102-2021-02-04","dir":"Changelog","previous_headings":"","what":"EpiReport 1.0.2 (2021-02-04)","title":"EpiReport 1.0.2 (2021-02-04)","text":"CRAN release: 2021-07-05","code":""},{"path":"/news/index.html","id":"bug-fixes-1-0-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiReport 1.0.2 (2021-02-04)","text":"DESCRIPTION, ‘rmarkdown’ package added ‘suggests’ section Correction AER ECDC reports URL documentation","code":""},{"path":"/news/index.html","id":"epireport-101-2021-02-04","dir":"Changelog","previous_headings":"","what":"EpiReport 1.0.1 (2021-02-04)","title":"EpiReport 1.0.1 (2021-02-04)","text":"CRAN release: 2021-02-04","code":""},{"path":"/news/index.html","id":"bug-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiReport 1.0.1 (2021-02-04)","text":"plotBar() plotBarGrouped() plotSeasonality() plotTS() plotTSGrouped()","code":""},{"path":"/news/index.html","id":"epireport-100-2020-12-18","dir":"Changelog","previous_headings":"","what":"EpiReport 1.0.0 (2020-12-18)","title":"EpiReport 1.0.0 (2020-12-18)","text":"CRAN release: 2021-01-06","code":""},{"path":"/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiReport 1.0.0 (2020-12-18)","text":"Fixing issue mix zero reporting missing reports Trend Season plots.","code":""},{"path":"/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiReport 1.0.0 (2020-12-18)","text":"New recent default dataset: DENGUE2019 Allowing extra stratification Table 1 disease stage (.e. HEPB HEPC diseases) Allowing automatic landscape mode Table 1 extra stratification acute vs. chronic disease required Trend Season plots now followed list countries reporting consistently study period included plot. Making function shapeECDCFlexTable() generic adaptable kind table. Adding option last row bold. EpiReport::MSCode reference table now extra column allow article “” country name (e.g. United Kingdom, Netherlands) Adding ECDC color palette new function EcdcColors()","code":""},{"path":"/news/index.html","id":"new-functions-1-0-0","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONS","title":"EpiReport 1.0.0 (2020-12-18)","text":"plotBar(): plot bar graph plotBarGrouped(): plot grouped bar graph plotBarH(): plot horizontal bar graph plotBarGroupedH(): plot grouped horizontal bar graph plotPie(): plot pie chart plotTS(): plot time series plotTSGrouped(): plot grouped time series EcdcColors() body_replace_gg_at_bkm()","code":""},{"path":"/news/index.html","id":"behavioral-change-1-0-0","dir":"Changelog","previous_headings":"","what":"BEHAVIORAL CHANGE","title":"EpiReport 1.0.0 (2020-12-18)","text":"Reordering outputs report. Renaming default report name shorten name. updated version officer flextable package, existing outputs replaced report re-run. output now correctly replaced using new functions packages. WARNING: may update bookmarks according new functions requirements.","code":""},{"path":"/news/index.html","id":"minor-improvements-1-0-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"EpiReport 1.0.0 (2020-12-18)","text":"Bookmarks names simplified. Cleaning Template accordingly dropping bookmarks used Improving error messages (e.g. provide clear error message study period incomplete). now two numbering: one Figures Tables. Numbering maps report now improved take account multiple maps. country “Czech Republic” now “Czechia” EpiReport::MSCode reference table. Style outputs caption improved template provided package.","code":""},{"path":"/news/index.html","id":"documentation-1-0-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION","title":"EpiReport 1.0.0 (2020-12-18)","text":"Vignettes updated list bookmarks required Microsoft Word template.","code":""},{"path":"/news/index.html","id":"deprecated-1-0-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED","title":"EpiReport 1.0.0 (2020-12-18)","text":"functions plotAgeGender() plotAge() still available package discouraged. Instead, user encouraged use functions plotBarGrouped() plotBar() respectively.","code":""},{"path":"/news/index.html","id":"epireport-011-2020-05-11","dir":"Changelog","previous_headings":"","what":"EpiReport 0.1.1 (2020-05-11)","title":"EpiReport 0.1.1 (2020-05-11)","text":"CRAN release: 2020-05-11","code":""},{"path":"/news/index.html","id":"bug-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiReport 0.1.1 (2020-05-11)","text":"adapting new R R packages versions","code":""},{"path":"/news/index.html","id":"epireport-010-2018-11-14","dir":"Changelog","previous_headings":"","what":"EpiReport 0.1.0 (2018-11-14)","title":"EpiReport 0.1.0 (2018-11-14)","text":"CRAN release: 2018-11-14 First release EpiReport package CRAN!","code":""}]
